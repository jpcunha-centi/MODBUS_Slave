/* 
 * Path:   Project/lib/Defines/
 * File:   CeNTI_Tools_defines.h
 * Author: CeNTI
 *
 * Created on January 10, 2024
 * Modified on January 11, 2024
 */
/*
 * ****** Microcontroller & Code Generator & Compiler ******
 * In the Microcontroller & Code Generator & Compiler there are some predefined
 * configurations that automatically sets all the configurations.
 * 
 * ****** Compiler ******
 * In the compiler is selected the compiler in use.
 * Compilers available:
 * - XC8
 * - XC16
 * - XC32
 * - ARM
 * 
 * ****** Endianness ******
 * In the endianness is selected the endianness
 * Types of endianness:
 * - Little
 * - Big
 * 
 * ****** Code configurator ******
 * In the code configurator is selected the code configurator used to generate the
 * peripherals code in use.
 * Configurators:
 * - ATMEL Start
 * - MCC
 * - Melody
 * - Harmony
 * - STM32 CubeMX
 * - Simplicity Studio Configurator
 * 
 * ****** Paths ******
 * In the paths the path for the code generated by the code configurator is set.
 */


#ifndef __PROJECT_CENTI_LIBRARY_LIB_DEFINES_CENTI_TOOLS_DEFINES_H__
#define	__PROJECT_CENTI_LIBRARY_LIB_DEFINES_CENTI_TOOLS_DEFINES_H__


/* ************************************************************************************ */
/* * Microcontroller & Code Generator & Compiler (Shortcut)                           * */
/* ************************************************************************************ */
/*
 * Microcontroller: ATSAM
 * Code generator:  ATMEL Start
 * Compiler:        ARM GNU GCC
 */
//#define __ATSAM_ATMEL_START_ARM__

/* 
 * Microcontroller: ATSAM
 * Code generator:  Harmony
 * Compiler:        XC32
 */
//#define __ATSAM_HARMONY_XC32__

/* 
 * Microcontroller: ATTiny
 * Code generator:  Melody
 * Compiler:        XC8
 */
//#define __ATTINY_MELODY_XC8__

/* 
 * Microcontroller: PIC18
 * Code generator:  MCC
 * Compiler:        XC8
 */
//#define __PIC18_MCC_XC8__

/* 
 * Microcontroller: PIC18
 * Code generator:  Melody
 * Compiler:        XC8
 */
//#define __PIC18_MELODY_XC8__

/*
 * Microcontroller: STM32L4xx
 * Code generator:  CubeMX
 * Compiler:        ARM GNU
 */
#define __STM32L4_CUBEMX_ARM__

/*
 * Microcontroller:	STM32F4xx
 * Code generator:	CubeMX
 * Compiler: 		ARM GNU
 */
//#define __STM32F4_CUBEMX_ARM__

/*
 * Microcontroller: EFR32
 * Code generator:  SLCP (Silicon Labs Configurator Project)
 * Compiler:        ARM GNU
 */
//#define __EFR32_SLCP_ARM__

/*
 * Microcontroller: NRF52832 
 * Code generator:  NRFX
 * Compiler:        ARM GNU
 */
//#define __NRF52_NRFX_ARM__

/* ************************************************************************************ */
/* * Compiler                                                                         * */
/* ************************************************************************************ */
/* ********** Types ********** */
#define CENTI_COMPILER_NONE     (-1)
#define CENTI_COMPILER_XC8      (1)
#define CENTI_COMPILER_XC16     (2)
#define CENTI_COMPILER_XC32     (3)
#define CENTI_COMPILER_ARM_GNU  (4)

/* ********** Selected based on Microcontroller and Code Generator ********** */
#if ((defined(__ATSAM_ATMEL_START_ARM__))   ||\
     (defined(__STM32L4_CUBEMX_ARM__))      ||\
     (defined(__STM32F4_CUBEMX_ARM__))      ||\
     (defined(__EFR32_SLCP_ARM__))          ||\
     (defined(__NRF52_NRFX_ARM__))          )

    #define CENTI_COMPILER CENTI_COMPILER_ARM_GNU

#elif ((defined(__ATTINY_MELODY_XC8__))     ||\
       (defined(__PIC18_MCC_XC8__))         ||\
       (defined(__PIC18_MELODY_XC8__))      )

    #define CENTI_COMPILER CENTI_COMPILER_XC8

#elif ((defined(__ATSAM_HARMONY_XC32__))    )

    #define CENTI_COMPILER CENTI_COMPILER_XC32

#endif

/* ********** Force compiler definition ********** */
/* # ------ # Change Here # ------ # */
//#define CENTI_COMPILER  CENTI_COMPILER_NONE

/* ********** Safety ********** */
#if ((!defined(CENTI_COMPILER))                 ||\
     (CENTI_COMPILER == CENTI_COMPILER_NONE)    )

    #error Define CENTI_COMPILER in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#elif (CENTI_COMPILER == CENTI_COMPILER_ARM_GNU)

    #define __CENTI_COMPILER_ARM_GNU__

#elif (CENTI_COMPILER == CENTI_COMPILER_XC8)

    #define __CENTI_COMPILER_XC8__

#elif (CENTI_COMPILER == CENTI_COMPILER_XC16)

    #define __CENTI_COMPILER_XC16__

#elif (CENTI_COMPILER == CENTI_COMPILER_XC32)

    #define __CENTI_COMPILER_XC32__

#else

    #error Define CENTI_COMPILER in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#endif  


/* ************************************************************************************ */
/* * Endianness                                                                       * */
/* ************************************************************************************ */
/* ********** Endianness Types ********** */
#define CENTI_ENDIANNESS_NONE   (-1)  /* Default */
#define CENTI_ENDIANNESS_BIG    (1)   /* MSB first, LSB last */
#define CENTI_ENDIANNESS_LITTLE (2)   /* LSB first, MSB last */

/* ********** Selected based on Microcontroller and Code Generator ********** */
#if ((defined(__ATSAM_ATMEL_START_ARM__))       ||\
     (defined(__ATSAM_HARMONY_XC32__))          ||\
     (defined(__ATTINY_MELODY_XC8__))           ||\
     (defined(__PIC18_MCC_XC8__))               ||\
     (defined(__PIC18_MELODY_XC8__))            ||\
     (defined(__STM32L4_CUBEMX_ARM__))          ||\
     (defined(__STM32F4_CUBEMX_ARM__))          ||\
     (defined(__EFR32_SLCP_ARM__))              ||\
     (defined(__NRF52_NRFX_ARM__))              )

    #define CENTI_ENDIANNESS CENTI_ENDIANNESS_LITTLE

#endif

/* ********** Force endianness definition ********** */
/* # ------ # Change Here # ------ # */
//#define CENTI_ENDIANNESS    CENTI_ENDIANNESS_NONE

/* ********** Endianness Safety ********** */
#if ((!defined(CENTI_ENDIANNESS))                   ||\
     (CENTI_ENDIANNESS == CENTI_ENDIANNESS_NONE)    )

    #error Define CENTI_ENDIANNESS in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#elif (CENTI_ENDIANNESS == CENTI_ENDIANNESS_BIG)

    #define __CENTI_ENDIANNESS_BIG__

#elif (CENTI_ENDIANNESS == CENTI_ENDIANNESS_LITTLE)

    #define __CENTI_ENDIANNESS_LITTLE__

#else

    #error Define CENTI_ENDIANNESS in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#endif


/* ************************************************************************************ */
/* * Code Configurator                                                                * */
/* ************************************************************************************ */
/* ********** Types ********** */
#define CENTI_CODE_CONFIGURATOR_NONE        (-1)
#define CENTI_CODE_CONFIGURATOR_MCC         (1)
#define CENTI_CODE_CONFIGURATOR_MELODY      (2)
#define CENTI_CODE_CONFIGURATOR_HARMONY     (3)
#define CENTI_CODE_CONFIGURATOR_ATMEL_START (4)
#define CENTI_CODE_CONFIGURATOR_CUBEMX      (5)
#define CENTI_CODE_CONFIGURATOR_SLCP        (6)
#define CENTI_CODE_CONFIGURATOR_NRFX        (7)

/* ********** Selected based on Microcontroller and Code Generator ********** */
#if ((defined(__ATSAM_ATMEL_START_ARM__))   )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_ATMEL_START

#elif ((defined(__ATSAM_HARMONY_XC32__))    )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_HARMONY

#elif ((defined(__PIC18_MCC_XC8__))         )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_MCC

#elif ((defined(__ATTINY_MELODY_XC8__))     ||\
       (defined(__PIC18_MELODY_XC8__))      )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_MELODY

#elif ((defined(__STM32L4_CUBEMX_ARM__))    ||\
       (defined(__STM32F4_CUBEMX_ARM__))    )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_CUBEMX

#elif ((defined(__EFR32_SLCP_ARM__))        )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_SLCP

#elif ((defined(__NRF52_NRFX_ARM__))        )

    #define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_NRFX

#endif

/* ********** Force code generator definition ********** */
/* # ------ # Change Here # ------ # */
//#define CENTI_CODE_CONFIGURATOR CENTI_CODE_CONFIGURATOR_NONE

/* ********** Safety ********** */
#if ((!defined(CENTI_CODE_CONFIGURATOR))                        ||\
     (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_NONE)  )

    #error Define CENTI_CODE_CONFIGURATOR in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_ATMEL_START)

    #define __CENTI_CODE_CONFIGURATOR_ATMEL_START__

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_HARMONY)

    #define __CENTI_CODE_CONFIGURATOR_HARMONY__

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_MCC)

    #define __CENTI_CODE_CONFIGURATOR_MCC__

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_MELODY)

    #define __CENTI_CODE_CONFIGURATOR_MELODY__

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_CUBEMX)

    #define __CENTI_CODE_CONFIGURATOR_CUBEMX__

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_NRFX)
    
    #define __CENTI_CODE_CONFIGURATOR_NRFX__

#else

    #error Define CENTI_CODE_CONFIGURATOR in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#endif


/* ************************************************************************************ */
/* * Path                                                                             * */
/* ************************************************************************************ */
#if (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_MCC)

    #include "../../../../mcc_generated_files/mcc.h"

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_ATMEL_START)

    #include "atmel_start.h"

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_HARMONY)

    #include "definitions.h"

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_MELODY)

    #include "../../../../mcc_generated_files/system/system.h"

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_CUBEMX)

    #if (defined(__STM32L4_CUBEMX_ARM__))

        #include "stm32l4xx_hal.h"

    #elif (defined(__STM32F4_CUBEMX_ARM__))

        #include "stm32f4xx_hal.h"

    #else

        #error Define DEVICE_INCLUDES_PATH in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

    #endif

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_SLCP)

    /* SLCP does not have any device include. */

#elif (CENTI_CODE_CONFIGURATOR == CENTI_CODE_CONFIGURATOR_NRFX)

    /* NRFX does not have any device include. */

#else

    #error Define DEVICE_INCLUDES_PATH in the Project/CeNTI/Defines/CeNTI_Tools_defines.h file!

#endif


#endif /* __PROJECT_CENTI_LIBRARY_LIB_DEFINES_CENTI_TOOLS_DEFINES_H__ */

/* -- End of file -- */
